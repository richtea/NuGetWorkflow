on:
  workflow_call:
    inputs:
      build-version:
        required: true
        type: string
      configuration:
        required: false
        type: string
        default: 'Release'
      output-folder:
        required: false
        type: string
        default: './publish'
    secrets:
      envPAT:
        required: true


jobs:
  build:
    env:
      BUILD_CONFIG: ${{ inputs.configuration }}
      SOLUTION: 'NuGetWorkflow.sln'
      OUTPUT_FOLDER: ${{ inputs.output-folder }}

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Get current version from changelog
      id: get_current_version
      uses: release-flow/keep-a-changelog-action/get-release-info@v1
      with:
        release-version: latest-or-unreleased

    - name: Parse current version number
      uses: madhead/semver-utils@latest
      id: semver_parser
      with:
        # A version to work with
        version: >
          ${{ steps.get_current_version.outputs.release-version != '[unreleased]'
            && steps.get_current_version.outputs.release-version
            || '0.0.0-ci.0'  }}

    - name: Set build version number
      id: set_build_version
      run: |
        build_version='${{ steps.semver_parser.outputs.inc-prerelease }}'
        if [[ -f $GITHUB_OUTPUT ]]; then
          echo "build-version=$build_version" >> $GITHUB_OUTPUT
        else
          echo "::set-output name=build-version::$build_version"
        fi

    - name: Restore dependencies
      run: dotnet restore $SOLUTION

    - name: Build
      run: >-
        dotnet build $SOLUTION
        --configuration $BUILD_CONFIG
        -p:Version=${{ steps.set_build_version.outputs.build-version }}
        --no-restore

    - name: Run tests
      run: >-
        dotnet test
        --configuration $BUILD_CONFIG
        --no-restore
        --no-build
        --verbosity normal
        --logger "GitHubActions;annotations.titleFormat=\$test;annotations.messageFormat=\$error"

    - name: Create NuGet package
      run: >-
        dotnet pack
        --configuration $BUILD_CONFIG
        --no-build
        --verbosity normal
        -p:Version=${{ steps.set_build_version.outputs.build-version }}
        --output ${{ env.OUTPUT_FOLDER }}
